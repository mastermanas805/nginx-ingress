// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createpod/{podName}/{image}": {
            "post": {
                "description": "Create a pod with the given image name in Kubernetes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pod Name",
                        "name": "podName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image Name",
                        "name": "image",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid image name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create pod",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/exposepod/{podName}/{port}": {
            "post": {
                "description": "Expose a pod with the given pod name in Kubernetes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Expose a pod",
                "operationId": "expose-pod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pod Name",
                        "name": "podName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Port Number",
                        "name": "port",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod exposed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid pod name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to expose pod",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Example API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
